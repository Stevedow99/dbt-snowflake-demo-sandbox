unit_tests:
  - name: test_is_valid_email_address
    description: "Check my is_valid_email_address logic captures all known edge cases - emails without ., emails without @, and emails from invalid domains."
    model: dim_customers_ut
    given:
      - input: ref('customer_dim_cleaned')
        rows:
          - {customer_id: 1, email: cool@example.com, email_top_level_domain: example.com}
          - {customer_id: 2, email: cool@unknown.com, email_top_level_domain: unknown.com}
          - {customer_id: 3, email: badgmail.com, email_top_level_domain: gmail.com}
          - {customer_id: 4, email: missingdot@gmailcom, email_top_level_domain: gmail.com}
      - input: ref('top_level_email_domains')
        rows:
          - {tld: example.com}
          - {tld: gmail.com}
    expect:
      rows:
        - {customer_id: 1, is_valid_email_address: true}
        - {customer_id: 2, is_valid_email_address: false}
        - {customer_id: 3, is_valid_email_address: false}
        - {customer_id: 4, is_valid_email_address: false}



# dbt test --select "dim_customers_ut,test_type:unit"